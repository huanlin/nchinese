name: Build and Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important for MinVer to determine version from git history
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Extract version from git tag
      id: get_version
      shell: pwsh
      run: |
        if ($env:GITHUB_REF -match 'refs/tags/v(.+)') {
          $version = $matches[1]
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "Creating release for version $version"
        } else {
          echo "VERSION=0.0.0" >> $env:GITHUB_OUTPUT
          echo "No version tag found, using 0.0.0"
        }    
    - name: Restore dependencies
      run: dotnet restore src/HuanlinLib.sln
    
    - name: Build
      run: dotnet build src/HuanlinLib.sln --configuration Release --no-restore /p:Version=${{ steps.get_version.outputs.VERSION }}
    
    - name: Test
      run: dotnet test tests/Test.Huanlin/Test.Huanlin.csproj --no-build --configuration Release --verbosity normal
    
    - name: Package
      run: dotnet pack src/HuanlinLib.sln --configuration Release --no-build --output ./artifacts /p:Version=${{ steps.get_version.outputs.VERSION }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        
  publish:
    name: Publish NuGet Packages
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts
    
    - name: Publish to NuGet
      shell: pwsh
      run: |
        Get-ChildItem -Path ./artifacts -Filter *.nupkg | ForEach-Object {
          dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        }